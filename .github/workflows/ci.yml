name: CI

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '38 0 * * *' # every day at randint(0, 60) minutes after midnight

jobs:
  test-plugin-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get install jq

      - name: plugin_json_to_cloud.sh should not change src.plugin.json
        run: |
          # src/plugin.json and plugin_json_to_cloud.sh
          # should contain the same ids and strings
          # this test makes sure they stay in sync
          jq --sort-keys . src/plugin.json > /tmp/before.json
          bash utils/plugin_json_to_cloud.sh
          jq --sort-keys . src/plugin.json > /tmp/after.json
          diff /tmp/before.json /tmp/after.json

  build:
    runs-on: ubuntu-latest
    outputs:
      signed-plugin-name: '${{ steps.build-signed.outputs.plugin_path }}'
      unsigned-plugin-name: '${{ steps.build-unsigned.outputs.plugin_path }}'
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline

      - name: Run prettier
        run: npm run pretty:check

      - name: Check types
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Unit tests
        run: npm run test:ci

      - name: Compatibility check
        run: npx @grafana/levitate@latest is-compatible --path src/module.ts --target @grafana/data,@grafana/ui,@grafana/runtime

      - name: clean up repo
        uses: actions/checkout@v4

      - name: Build frontend unsigned
        id: build-unsigned
        uses: ./.github/build/
        with:
          release: false
          signed: false

      - name: clean up repo
        uses: actions/checkout@v4

      - name: Build frontend signed
        if: (github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == github.repository)
        id: build-signed
        uses: ./.github/build/
        env:
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
        with:
          release: false
          signed: true

  validate-plugin:
    if: (github.event_name != 'pull_request') || (github.event.pull_request.head.repo.full_name == github.repository)
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download package from build job
        uses: actions/download-artifact@v4
        with:
          name: '${{ needs.build.outputs.signed-plugin-name }}'

      - name: Setup Go environment
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install validator
        run: |
          git clone https://github.com/grafana/plugin-validator
          pushd ./plugin-validator/pkg/cmd/plugincheck2
          go install
          popd

      - name: Validate plugin
        run: |
          plugincheck2 -config ./plugin-validator/config/default.yaml checkmk-cloud-datasource-*.zip

  e2e:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Download package from build job
        uses: actions/download-artifact@v4
        with:
          name: '${{ needs.build.outputs.unsigned-plugin-name }}'

      - name: unpack and move plugin
        run: |
          unzip tribe-29-checkmk-datasource*.zip
          mv tribe-29-checkmk-datasource dist

      - name: run the e2e tests
        run: |
          docker compose rm -f
          docker compose up --exit-code-from=playwright --pull always
        working-directory: tests/
        env:
          CI: true

      - name: upload playwright artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright
          retention-days: 1
          path: tests/results
